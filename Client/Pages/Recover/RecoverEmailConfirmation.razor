@page "/recover/email-confirmation"
@using Quanda.Shared.DTOs.Requests
@inject IUsersRepository _usersRepository
@inject IToastService _toastService

<label class="d-block text-muted">Please fill in fields bellow with the data you provided during registration </label>
<RecoveryFormComponent @ref="_recoveryFormComponent" OnValidSubmit="@HandleValidSubmit" IsPending="@_isPending" SubmitText="Resend confirmation email"/>

@code {

    /// <summary>
    ///     Zmienna mowiąca o tym, czy rządanie formularza (RecoveryFormComponent) jest w trakcie realizacji
    /// </summary>
    private bool _isPending;

    /// <summary>
    ///     Komponent <RecoveryFormComponent />
    /// </summary>
    private RecoveryFormComponent _recoveryFormComponent;

    /// <summary>
    ///     Metoda wywoływana przy potwierdzeniu prawidłowo wypełnionego formularza odzyskania (RecoveryFormComponent)
    /// </summary>
    /// <param name="recoverDto"></param>
    /// <returns></returns>
    public async Task HandleValidSubmit(RecoverDTO recoverDto)
    {
        var captchaResponseToken = await _recoveryFormComponent.CaptchaComponent.GetCaptchaResponseAsync();
        if (captchaResponseToken is null)
        {
            _toastService.ShowError("reCaptcha must be completed.");
            return;
        }
        _recoveryFormComponent.SetFormCaptchaToken(captchaResponseToken);

        _isPending = true;
        StateHasChanged();

        var isCaptchaCorrect = await _usersRepository.RecoverConfirmationEmailAsync(recoverDto);
        if (!isCaptchaCorrect)
        {
            _toastService.ShowError("reCaptcha must be completed.");
        }
        else
        {
            _toastService.ShowSuccess("Account confirmation email has been resend.");
            _recoveryFormComponent.ClearForm();
        }

        _isPending = false;
        await _recoveryFormComponent.CaptchaComponent.ResetCaptchaAsync();
    }

}