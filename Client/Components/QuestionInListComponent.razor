@using Quanda.Shared.Models
@using System.Text.RegularExpressions
@using Microsoft.AspNetCore.Components
@inject IAnswerRepository AnswersReposiotry
@inject IUsersRepository UsersReposiotry
@if(user != null) {
    <div class="question-container">
        <a href="questionURL">

            <div class="question-header">
                <div class="question-text">
                    @question.Header
                </div>
                <div class="question-date">
                    @question.PublishDate.ToString("dd-MM-yyyy") @finished
                </div>
            </div>
            <div class="question-categories">
                <div class="question-category-label">
                    Categories:
                </div>
                <div class="question-categories-containter">
                    @foreach (var category in categories)
                        {
                            <div class="question-category">
                                @category
                            </div>
                        }
                </div>
            </div>
            <div class="question-description">
                @description
            </div>
            <div class="question-footer">
                <div class="question-user-info">
                    <div class="question-user-image">
                        <img src="@user.Avatar" href="@userURL" />
                    </div>
                    <div class="question-user-nick">
                        @user.Nick
                    </div>
                </div>
                <div class="question-user-views">
                    <div class="question-user-views-text">Views: </div>
                    <div class="question-user-views-value">@question.Views</div>
                </div>
                <div class="question-user-answers">
                    <div class="question-user-answers-text">Answers: </div>
                    <div class="question-user-answers-value">@answers</div>
                </div>
            </div>
        </a>
    </div>
}
@code {
    [Parameter]
    public Question question { get; set; }

    public GetUserForQuestionByIDDTO user;

    int answers=0;

    public List<string> categories = new List<string> { "testowy", "testowy2" };

    private string finished = string.Empty;
    private string questionURL = string.Empty;
    private string userURL = string.Empty;
    private MarkupString description;
    protected async override Task OnInitializedAsync()
    {
        description = (MarkupString)Regex.Replace(question.Description, "<img [^>]* />", "");
        questionURL = $"questions/{question.IdQuestion}";
        userURL = $"users/{question.IdUser}";
        user = await UsersReposiotry.GetDataForQuestionAsync(question.IdUser);
        var tmp = await AnswersReposiotry.GetAnswersAsync(question.IdQuestion);
        answers = tmp.Count;
        finished = question.IsFinished ? "#closed" : "";

    }

}
