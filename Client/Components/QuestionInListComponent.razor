@using System.Text.RegularExpressions
@if (question != null)
{
    <div class="question-container">
        <a href="@questionURL">

            <div class="question-header">
                <div class="question-text">
                    @question.Header
                </div>
                <div class="question-date">
                    @question.PublishDate.ToString("dd-MM-yyyy") @finished
                </div>
            </div>
            <div class="question-categories">
                <div class="question-category-label">
                    Categories:
                </div>
                <div class="question-categories-containter">
                    @foreach (var category in question.Categories)
                    {
                        <div class="question-category">
                            @category
                        </div>
                    }
                </div>
            </div>
            <div class="question-description">
                @description
            </div>
            <div class="question-footer">
                <a href="@userURL">
                    <div class="question-user-info">
                        <div class="question-user-image">
                            <img src="@question.Avatar"/>
                        </div>
                        <div class="question-user-nick">
                            @question.Nickname
                        </div>
                    </div>
                </a>
                <div class="question-user-views">
                    <div class="question-user-views-text">Views: </div>
                    <div class="question-user-views-value">@question.Views</div>
                </div>
                <div class="question-user-answers">
                    <div class="question-user-answers-text">Answers: </div>
                    <div class="question-user-answers-value">@question.AnswersCount</div>
                </div>
            </div>
        </a>
    </div>
}

@code {

    /// <summary>
    ///     Parametr opisujący pytanie
    /// </summary>
    [Parameter]
    public GetQuestionsDTO question { get; set; }

    /// <summary>
    ///     Wyliczalny parametr mówiący czy pytanie jest zakończone
    /// </summary>
    private string finished = string.Empty;

    /// <summary>
    ///     Wyliczalny parametr który opisuje ściezkę do pytania
    /// </summary>
    private string questionURL = string.Empty;

    /// <summary>
    ///     Wyliczalny parametr który opisuje ściezkę do użytkownika tworzącego pytanie
    /// </summary>
    private string userURL = string.Empty;

    /// <summary>
    ///     Wyliczalny parametr opisujący tekst pytania bez zdjęć
    /// </summary>
    private MarkupString description;

    protected override async Task OnParametersSetAsync()
    {
        description = (MarkupString) Regex.Replace(question.Description, "<img [^>]* />", "");
        questionURL = $"questions/{question.IdQuestion}";
        userURL = $"users/{question.IdUser}";
        finished = question.IsFinished ? "#closed" : "";
    }

}