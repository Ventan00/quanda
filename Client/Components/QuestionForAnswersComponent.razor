@inject NavigationManager navigationManager

<div class="question-container">
    <h1 class="question-header-text">
        @Question.Header
    </h1>
    <div class="header-info" style="margin-bottom: 5px;">
        <div class="question-header-info">
            <span>
                @Question.PublishDate.ToShortDateString()
            </span>
            <span class="gray">
                Views: @Question.Views
            </span>
            <span class="gray">
                Answers: @Question.AnswersCount
            </span>
            <span class="text-t gray">
                Asked by
            </span>
        </div>
        <div>
            <a href="/users/@Question.User.IdUser">
                <img class="user-avatar" src="@Question.User.Avatar" alt="Avatar" />
            </a>
        </div>
        <span class="user-nickname gray">
            @Question.User.Nickname
        </span>
    </div>
    <span class="text">
        @Question.Description
    </span>
    <div class="tag-row">
        <span class="gray">
            tags:
        </span>
        @foreach (var tag in Question.Tags)
        {
            <a href="/tags/@tag.IdTag" class="tag">
                #@tag.Name
            </a>
        }
    </div>
    <div class="footer">
        @if (OwnerOfAnswer)
        {
            <div class="black-action" @onclick="@(async () =>await EditQuestion())">
                <button class="quanda-icon icon-edit white"/>
                <span>
                    edit
                </span>
            </div>
            <div class="red-action" @onclick="@(async () =>await ReportQuestionToDelete())">
                <button class="quanda-icon icon-delete red" />
                <div>
                    delete question
                </div>
            </div>
        }
        else
        {
            <div class="red-action" @onclick="@(async () =>await ReportQuestion())">
                <button class="quanda-icon icon-report red" />
                <div>
                    Report question
                </div>
            </div>
        }
    </div>
</div>

@code {
    /// <summary>
    ///     Property infomujące czy aktualnie przeglądający użytkownik jest właścicielem pytania.
    /// </summary>
    [Parameter]
    public bool OwnerOfAnswer { get; set; }
    /// <summary>
    ///     Pytanie z potrzebnymi danymi
    /// </summary>
    [Parameter]
    public QuestionResponseDTO Question { get; set; }

    /// <summary>
    ///     Metoda odpowiedzialna za zgłoszenie pytania.
    /// </summary>
    private async Task ReportQuestion()
    {

    }

    /// <summary>
    ///     Metoda odpowiedzialna za zgłoszenie odpowiedzi do usunięcia.
    /// </summary>
    private async Task ReportQuestionToDelete()
    {

    }
    /// <summary>
    ///     Metoda przenosi do strony edycji pytania.
    /// </summary>
    private async Task EditQuestion()
    {
        navigationManager.NavigateTo($"/questions/{Question.IdQuestion}/edit");
    }
}