@page "/test"
@inject IAnswerRepository answerRepository
@inject IJSRuntime js
<h3>AnswersToQuestionsComponent</h3>
<div class="answers-container">
    @if (Answers == null)
    {
        <div class="loader"><h1>Loading...</h1></div>

    }
    else
    {
        if (Answers.Count() > 0)
        {
            @foreach (var answerBox in Answers)
            {
                <div class="answer-Main">
                    <SingleAnswerComponent Answer="answerBox.MainAnswer" ReloadAnswers="OnInitializedAsync"/>
                </div>
                <div class="answer-Main_child">
                    @foreach (var answerChild in answerBox.ChildAnswers)
                    {
                        <div class="answer-child" style="margin-left: 10px;">
                                <SingleAnswerComponent Answer="answerChild" ReloadAnswers="OnInitializedAsync"/>
                        </div>
                    }
                </div>
            }
        }
    }
</div>


@code {
    [Parameter]
    public List<AnswerBoxResponseDto> Answers { get; set; }

    protected async override Task OnInitializedAsync()
    {
        Answers = await answerRepository.GetAnswersAsync(1);
    }


}